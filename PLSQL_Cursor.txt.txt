SQL> declare
  2   emp_rec hr.emp%rowtype;
  3  begin
  4   select * into emp_rec from hr.emp where department_id=&deptid;
  5   dbms_output.put_line(emp_rec.employee_id||':'||emp_rec.last_name);
  6  end;
  7  /
輸入 deptid 的值:  10
舊的    4:  select * into emp_rec from hr.emp where department_id=&deptid;
新的    4:  select * into emp_rec from hr.emp where department_id=10;
200:Whalen

已順利完成 PL/SQL 程序.

SQL> /
輸入 deptid 的值:  20
舊的    4:  select * into emp_rec from hr.emp where department_id=&deptid;
新的    4:  select * into emp_rec from hr.emp where department_id=20;
declare
*
 ERROR 在行 1:
ORA-01422: 精確擷取傳回的列數超過所要求的列數    --implicit cursor不能處理回傳超過1筆以上的select結果
ORA-06512: 在 line 4

SQL> select * from hr.emp where department_id=10;

EMPLOYEE_ID FIRST_NAME           LAST_NAME                 EMAIL
----------- -------------------- ------------------------- -------------------------
PHONE_NUMBER         HIRE_DATE      JOB_ID         SALARY COMMISSION_PCT MANAGER_ID DEPART
MENT_ID
-------------------- -------------- ---------- ---------- -------------- ---------- ------
-------
        200 Jennifer             Whalen                    JWHALEN
515.123.4444         17-9月 -03     AD_ASST          4400                       101
     10


SQL> select * from hr.emp where department_id=20;

EMPLOYEE_ID FIRST_NAME           LAST_NAME                 EMAIL
----------- -------------------- ------------------------- -------------------------
PHONE_NUMBER         HIRE_DATE      JOB_ID         SALARY COMMISSION_PCT MANAGER_ID DEPART
MENT_ID
-------------------- -------------- ---------- ---------- -------------- ---------- ------
-------
        201 Michael              Hartstein                 MHARTSTE
515.123.5555         17-2月 -04     MK_MAN          13000                       100
     20

        202 Pat                  Fay                       PFAY
603.123.6666         17-8月 -05     MK_REP           6000                       201
     20

SQL> declare
  2   emp_rec hr.emp%rowtype;
  3  begin
  4   select * into emp_rec from hr.emp where department_id=&deptid;
  5   dbms_output.put_line(emp_rec.employee_id||':'||emp_rec.last_name);
  6  end;
  7  /
輸入 deptid 的值:  5
舊的    4:  select * into emp_rec from hr.emp where department_id=&deptid;
新的    4:  select * into emp_rec from hr.emp where department_id=5;
declare
*
 ERROR 在行 1:
ORA-01403: 找不到資料   --implict cursor不光是無法處理多筆資料,也不能處理沒有回傳的狀況
ORA-06512: 在 line 4

--Implict Cursor只能處理SELECT有回傳,且只有回傳一筆的操作

--Explicit Cursor(顯式游標)
--cursor定義必須在宣告區裡宣告
--開啟/擷取/關閉cursor必須在執行區裡進行
--當select指令回傳超過一筆或0筆,則必須使用.
SQL> declare
  2   cursor emp_cur1 is
  3     select * from hr.emp where department_id=&deptid;
  4   emp_rec emp_cur1%rowtype;
  5  begin
  6   dbms_output.put_line('Before Open Cursor!');
  7   dbms_output.put_line('---------------------------------');
  8   dbms_output.put_line(emp_rec.employee_id||':'||emp_rec.last_name);
  9   dbms_output.put_line('---------------------------------');
 10   open emp_cur1;
 11   dbms_output.put_line('After Open Cursor!');
 12   dbms_output.put_line('---------------------------------');
 13   fetch emp_cur1 into emp_rec;
 14   dbms_output.put_line(emp_rec.employee_id||':'||emp_rec.last_name);
 15   close emp_cur1;
 16  end;
 17  /
輸入 deptid 的值:  10
舊的    3:    select * from hr.emp where department_id=&deptid;
新的    3:    select * from hr.emp where department_id=10;
Before Open Cursor!
---------------------------------
:
---------------------------------
After Open Cursor!
---------------------------------
200:Whalen

已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor emp_cur1 is
  3     select * from hr.emp where department_id=&deptid;
  4   emp_rec emp_cur1%rowtype;
  5  begin
  6   dbms_output.put_line('Before Open Cursor!');
  7   dbms_output.put_line('---------------------------------');
  8   dbms_output.put_line(emp_rec.employee_id||':'||emp_rec.last_name);
  9   dbms_output.put_line('---------------------------------');
 10   open emp_cur1;
 11   dbms_output.put_line('After Open Cursor!');
 12   dbms_output.put_line('---------------------------------');
 13   fetch emp_cur1 into emp_rec;
 14   dbms_output.put_line('Fecth1----:'||emp_rec.employee_id||':'||emp_rec.last_name);
 15   fetch emp_cur1 into emp_rec;
 16   dbms_output.put_line('Fecth2----:'||emp_rec.employee_id||':'||emp_rec.last_name);
 17   close emp_cur1;
 18  end;
 19  /
輸入 deptid 的值:  20
舊的    3:    select * from hr.emp where department_id=&deptid;
新的    3:    select * from hr.emp where department_id=20;
Before Open Cursor!
---------------------------------
:
---------------------------------
After Open Cursor!
---------------------------------
Fecth1----:201:Hartstein
Fecth2----:202:Fay

已順利完成 PL/SQL 程序.

--如果fetch次數多於active set的資料筆數
SQL> declare
  2   cursor emp_cur1 is
  3     select * from hr.emp where department_id=&deptid;
  4   emp_rec emp_cur1%rowtype;
  5  begin
  6   dbms_output.put_line('Before Open Cursor!');
  7   dbms_output.put_line('---------------------------------');
  8   dbms_output.put_line(emp_rec.employee_id||':'||emp_rec.last_name);
  9   dbms_output.put_line('---------------------------------');
 10   open emp_cur1;
 11   dbms_output.put_line('After Open Cursor!');
 12   dbms_output.put_line('---------------------------------');
 13   fetch emp_cur1 into emp_rec;
 14   dbms_output.put_line('Fecth1----:'||emp_rec.employee_id||':'||emp_rec.last_name);
 15   fetch emp_cur1 into emp_rec;
 16   dbms_output.put_line('Fecth2----:'||emp_rec.employee_id||':'||emp_rec.last_name);
 17   fetch emp_cur1 into emp_rec;
 18   dbms_output.put_line('Fecth3----:'||emp_rec.employee_id||':'||emp_rec.last_name);
 19   close emp_cur1;
 20  end;
 21  /
輸入 deptid 的值:  20
舊的    3:    select * from hr.emp where department_id=&deptid;
新的    3:    select * from hr.emp where department_id=20;
Before Open Cursor!
---------------------------------
:
---------------------------------
After Open Cursor!
---------------------------------
Fecth1----:201:Hartstein
Fecth2----:202:Fay
Fecth3----:202:Fay               --到底是重複fetch最後一筆,還是並沒有進行fetch操作

已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor emp_cur1 is
  3     select * from hr.emp where department_id=&deptid;
  4   emp_rec emp_cur1%rowtype;
  5  begin
  6   dbms_output.put_line('Before Open Cursor!');
  7   dbms_output.put_line('---------------------------------');
  8   dbms_output.put_line(emp_rec.employee_id||':'||emp_rec.last_name);
  9   dbms_output.put_line('---------------------------------');
 10   open emp_cur1;
 11   dbms_output.put_line('After Open Cursor!');
 12   dbms_output.put_line('---------------------------------');
 13   fetch emp_cur1 into emp_rec;
 14   dbms_output.put_line('Fecth1----:'||emp_rec.employee_id||':'||emp_rec.last_name);
 15   emp_rec.employee_id := null;
 16   emp_rec.last_name := null;
 17   fetch emp_cur1 into emp_rec;
 18   dbms_output.put_line('Fecth2----:'||emp_rec.employee_id||':'||emp_rec.last_name);
 19   emp_rec.employee_id := null;
 20   emp_rec.last_name := null;
 21   fetch emp_cur1 into emp_rec;
 22   dbms_output.put_line('Fecth3----:'||emp_rec.employee_id||':'||emp_rec.last_name);
 23   emp_rec.employee_id := null;
 24   emp_rec.last_name := null;
 25   close emp_cur1;
 26  end;
 27  /
輸入 deptid 的值:  20
舊的    3:    select * from hr.emp where department_id=&deptid;
新的    3:    select * from hr.emp where department_id=20;
Before Open Cursor!
---------------------------------
:
---------------------------------
After Open Cursor!
---------------------------------
Fecth1----:201:Hartstein
Fecth2----:202:Fay
Fecth3----::                   --因為每次fetch前都將emp_rec的相對field值變更為NULL,所以可以發現最後一次並未fetch成功

已順利完成 PL/SQL 程序.

SQL>
SQL> declare
  2   CURSOR dept90_cur IS
  3    select * from hr.emp where department_id=90;   --explicit cursor是由一個Select指令所組成
  4  begin
  5   OPEN dept90_cur;   --首先執行cursor所對應的select statement,將其結果儲存在memory,稱為Active Set.
                         --然後將cursor指向該Active Set的第一筆紀錄的位置.
  6   CLOSE dept90_cur;  --清除Active Set與cursor
  7  end;
  8  /

已順利完成 PL/SQL 程序.

SQL> declare
  2   CURSOR dept90_cur IS
  3    select * from hr.emp where department_id=90;
  4   rec_dept90 dept90_cur%ROWTYPE;
  5  begin
  6   OPEN dept90_cur;
  7   FETCH dept90_cur INTO rec_dept90;  --讀取cursor所指向的Active Set內容到變數裡,然後移動cursor指向下一筆記錄
  8   dbms_output.put_line(rec_dept90.last_name||':'||rec_dept90.salary);
  9   CLOSE dept90_cur;
 10  end;
 11  /
King:24000

已順利完成 PL/SQL 程序.

--如果line 7到line 8需要重複執行,則可以使用迴圈來做到此功能
SQL> declare
  2   cursor dept90_cur is
  3    select * from hr.emp where department_id=90;
  4   rec_dept90 dept90_cur%rowtype;
  5  begin
  6   open dept90_cur;
  7   fetch dept90_cur into rec_dept90;
  8   dbms_output.put_line(rec_dept90.last_name||':'||rec_dept90.salary);
  9   fetch dept90_cur into rec_dept90;
 10   dbms_output.put_line(rec_dept90.last_name||':'||rec_dept90.salary);
 11   fetch dept90_cur into rec_dept90;
 12   dbms_output.put_line(rec_dept90.last_name||':'||rec_dept90.salary);
 13   close dept90_cur;
 14  end;
 15  /
King:24000
Kochhar:17000
De Haan:17000

已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor dept90_cur is
  3    select * from hr.emp where department_id=90;
  4   rec_dept90 dept90_cur%rowtype;
  5   i integer := 1;
  6  begin
  7   open dept90_cur;
  8   loop
  9    fetch dept90_cur into rec_dept90;
 10    dbms_output.put_line(rec_dept90.last_name||':'||rec_dept90.salary);
 11    exit when i=3;
 12    i := i+1;
 13   end loop;
 14   close dept90_cur;
 15  end;
 16  /
King:24000
Kochhar:17000
De Haan:17000

已順利完成 PL/SQL 程序.
--為何執行3次迴圈,而不是5次

SQL> declare
  2   cursor dept90_cur is
  3    select * from hr.emp where department_id=90;
  4   rec_dept90 dept90_cur%rowtype;
  5   i integer := 1;
  6  begin
  7   open dept90_cur;
  8   loop
  9    fetch dept90_cur into rec_dept90;
 10    dbms_output.put_line(rec_dept90.last_name||':'||rec_dept90.salary);
 11    exit when i=5;
 12    i := i+1;
 13   end loop;
 14   close dept90_cur;
 15  end;
 16  /
King:24000
Kochhar:17000
De Haan:17000
De Haan:17000  --因為已經到Active Set的最後一筆記錄,所以無法在fetch資料到PL/SQL Record.
De Haan:17000  --目前PL/SQL Record內容還是維持最後一次成功fetch所寫入的內容

已順利完成 PL/SQL 程序.

SQL> declare
  2   CURSOR dept90_cur IS
  3    select * from hr.emp where department_id=90;
  4   rec_dept90 dept90_cur%rowtype;
  5   i integer := 1;
  6  begin
  7   OPEN dept90_cur;
  8   loop
  9    fetch dept90_cur into rec_dept90;
 10    dbms_output.put_line(rec_dept90.last_name||':'||rec_dept90.salary);
 11    exit when i=5;
 12    i := i+1;
 13    rec_dept90.last_name := NULL;
 14    rec_dept90.salary := NULL;
 15   end loop;
 16   close dept90_cur;
 17  end;
 18  /
King:24000
Kochhar:17000
De Haan:17000
:
:

已順利完成 PL/SQL 程序.


SQL> declare
  2   CURSOR cur_big1
  3   IS select * from hr.big1 where 1=2;
  4   cur_big1_rec cur_big1%rowtype;
  5  begin
  6   open cur_big1;
  7   fetch cur_big1 into cur_big1_rec;
  8   if cur_big1%notfound
  9    then
 10     dbms_output.put_line('擷取失敗');
 11    else
 12     dbms_output.put_line('擷取成功');
 13   end if;
 14  end;
 15  /
擷取失敗

已順利完成 PL/SQL 程序.

  2   CURSOR cur_big1
  3   IS select * from hr.big1 where 1=2;
  4   cur_big1_rec cur_big1%rowtype;
  5  begin
  6   open cur_big1;
  7   dbms_output.put_line('CUR_BIG1有 '||cur_big1%rowcount); --rowcount顯示到目前為止,只cursor已經處理幾筆資了.
  8   fetch cur_big1 into cur_big1_rec;                       --explicit cursor必須先fecth後,rowcount才會有非0的值出現
  9   if cur_big1%notfound
 10    then
 11     dbms_output.put_line('擷取失敗');
 12    else
 13     dbms_output.put_line('擷取成功');
 14   end if;
 15  end;
 16  /
CUR_BIG1有 0
擷取失敗

已順利完成 PL/SQL 程序.

SQL> create table hr.big1 as select * from all_objects;

SQL> declare
  2   CURSOR cur_big1
  3   IS select * from hr.big1 where object_id=23456;
  4   cur_big1_rec cur_big1%rowtype;
  5  begin
  6   open cur_big1;
  7   dbms_output.put_line('CUR_BIG1有'||cur_big1%rowcount);
  8   fetch cur_big1 into cur_big1_rec;
  9   if cur_big1%notfound
 10    then
 11     dbms_output.put_line('擷取失敗');
 12    else
 13     dbms_output.put_line('擷取成功');
 14   end if;
 15  end;
 16  /
CUR_BIG1有0
擷取成功

已順利完成 PL/SQL 程序.

SQL> declare
  2   CURSOR cur_big1
  3   IS select * from hr.big1 where object_id=23456;
  4   cur_big1_rec cur_big1%rowtype;
  5  begin
  6   open cur_big1;
  7   dbms_output.put_line('CUR_BIG1有'||cur_big1%rowcount);
  8   fetch cur_big1 into cur_big1_rec;
  9   if cur_big1%notfound
 10    then
 11     dbms_output.put_line('擷取失敗');
 12    else
 13     dbms_output.put_line('擷取成功');
 14   end if;
 15   dbms_output.put_line('CUR_BIG1有'||cur_big1%rowcount);  --explicit cursor的ROWCOUNT屬性與SQL%ROWCOUNT不太一樣.
 16  end;
 17  /
CUR_BIG1有0
擷取成功
CUR_BIG1有1

已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor dept90_cur is
  3    select * from hr.emp where department_id=90;
  4   dept90_rec dept90_cur%rowtype;  --依照cursor定義宣告一個PL/SQL Record,主要用來接受此cursor所擷取的資料
  5  begin
  6   open dept90_cur;  --執行cursor所對應的select指令,其結果被稱為active set.而目前的cursor指向active set的第一筆記錄的位置.
  7   loop
  8    fetch dept90_cur into dept90_rec;  --讀取cursor所指向的active set記錄到dept90_rec裡,並且將cursor指標向下移動一筆.
  9    dbms_output.put_line(dept90_rec.last_name||':'||dept90_rec.salary);
 10    EXIT WHEN dept90_cur%NOTFOUND;  --%NOTFOUND用來敘述讀cursor所指定的位置與移動cursor向下一筆這個動作是否成功.
                                       --cursor%NOTFOUND=FALSE,表示最近一次的fetch結果為成功,TRUE表示最近一次的fetch操作為失敗.
 11   end loop;                        --cursor%FOUND則為NOTFOUND的相反
 12   close dept90_cur;  --關閉cursor,將釋放active set所佔據的記憶體空間,此cursor也將被消滅.
 13  end;
 14  /
King:24000
Kochhar:17000
De Haan:17000
De Haan:17000  --為何還是多出現一次.因為EXIT位在dbms_output之後,當fetch失敗時,變數內容並沒有被更新所致.

已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor dept90_cur is
  3    select * from hr.emp where department_id=90;
  4   dept90_rec dept90_cur%rowtype;
  5  begin
  6   open dept90_cur;
  7   for i in 1..5 loop          --此迴圈預設將被執行5次
  8    fetch dept90_cur into dept90_rec;
  9    dbms_output.put_line(i||':'||dept90_rec.last_name||':'||dept90_rec.salary);
 10   end loop;
 11   close dept90_cur;
 12  end;
 13  /
1:King:24000
2:Kochhar:17000
3:De Haan:17000
4:De Haan:17000  --與前面原因相同
5:De Haan:17000  --與前面原因相同

已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor dept90_cur is
  3    select * from hr.emp where department_id=90;
  4   dept90_rec dept90_cur%rowtype;
  5  begin
  6   open dept90_cur;
  7   for i in 1..5 loop
  8    fetch dept90_cur into dept90_rec;
  9    dbms_output.put_line(i||':'||dept90_rec.last_name||':'||dept90_rec.salary);
 10    EXIT WHEN dept90_cur%NOTFOUND;  --FOR LOOP裡,如果有EXIT出現,還是可能執行不到預期的次數(迴圈)
 11   end loop;
 12   close dept90_cur;
 13  end;
 14  /
1:King:24000
2:Kochhar:17000
3:De Haan:17000
4:De Haan:17000  --因為離開loop條件應該立刻出現在fetch之後

已順利完成 PL/SQL 程序.

--不管active set有幾筆記錄,最多只讀5筆.
SQL> declare
  2   cursor dept90_cur is
  3    select * from hr.emp where department_id=90;
  4   dept90_rec dept90_cur%rowtype;
  5  begin
  6   open dept90_cur;
  7   FOR i in 1..5 LOOP
  8    FETCH dept90_cur INTO dept90_rec;
  9    EXIT WHEN dept90_cur%NOTFOUND;
 10    dbms_output.put_line(i||':'||dept90_rec.last_name||':'||dept90_rec.salary);
 11  --  exit when dept90_cur%notfound;
 12   END LOOP;
 13   close dept90_cur;
 14  end;
 15  /
1:King:24000
2:Kochhar:17000
3:De Haan:17000
   --雖然沒有顯示出來.但是line 8實際上被執行4次.可是dept90_rec裡的內容與第3次fetch相同,因為最後一次fetch雖然沒有成功,但dept90_rec裡還是有舊資料.
   --但如果使用PL/SQL Table則將不會多出一筆資料.
已順利完成 PL/SQL 程序.

--將active set的所有記錄全數讀取
SQL> declare
  2   cursor dept90_cur is
  3    select * from hr.emp where department_id=90;
  4   dept90_rec dept90_cur%rowtype;
  5  begin
  6   open dept90_cur;
  7   loop
  8    fetch dept90_cur into dept90_rec;
  9    exit when dept90_cur%notfound;
 10    dbms_output.put_line(dept90_rec.last_name||':'||dept90_rec.salary);
 11   end loop;
 12   close dept90_cur;
 13  end;
 14  /
King:24000
Kochhar:17000
De Haan:17000 --看似完美,但真的如此?

已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor dept90_cur is
  3    select * from hr.emp where department_id=90;
  4   TYPE dept90_table_type IS TABLE OF dept90_cur%ROWTYPE INDEX BY PLS_INTEGER;
  5   dept90_table dept90_table_type;
  6   i number;
  7  begin
  8   open dept90_cur;
  9   i := 1;
 10   loop
 11    dbms_output.put_line(i);
 12    FETCH dept90_cur INTO dept90_table(i);  --使用pl/sql table接受cursor結果,可以避免pl/sql record的問題(fetch失敗但舊資料卻還存在)
 13    exit when dept90_cur%notfound;
 14    i := i+1;
 15   end loop;
 16  close dept90_cur;
 17   for j in dept90_table.first..dept90_table.last loop
 18    dbms_output.put_line(j||':'||dept90_table(j).last_name||':'||dept90_table(j).salary);
 19   end loop;
 20  end;
 21  /
1
2
3
4
King:24000
Kochhar:17000
De Haan:17000


已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor cur_emp is
  3    select last_name,salary
  4    from emp
  5    where department_id=90;
  6   type aa_emp is table of cur_emp%rowtype
  7    index by pls_integer;
  8   tab_emp aa_emp;
  9   i pls_integer := 1;
 10  begin
 11   open cur_emp;
 12   loop
 13    fetch cur_emp into tab_emp(i);
 14    exit
 15     when cur_emp%notfound;
 16    i := i + 1;
 17   end loop;
 18   close cur_emp;
 19   for i in tab_emp.first..tab_emp.last loop
 20    dbms_output.put_line(tab_emp(i).last_name||':'||tab_emp(i).salary);
 21   end loop;
 22   for i in reverse tab_emp.first..tab_emp.last loop
 23    dbms_output.put_line(tab_emp(i).last_name||':'||tab_emp(i).salary);
 24   end loop;
 25  end;
 26  /
King:24000
Kochhar:17000
De Haan:17000
De Haan:17000
Kochhar:17000
King:24000

已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor dept900_cur is
  3    select * from hr.emp where department_id=900;
  4   dept900_rec dept900_cur%rowtype;
  5  begin
  6   open dept900_cur;
  7   loop
  8    fetch dept900_cur into dept900_rec;
  9    exit when dept900_cur%notfound;
 10    dbms_output.put_line(dept900_rec.last_name||':'||dept900_rec.salary);
 11   end loop;
 12   close dept900_cur;
 13  end;
 14  /

已順利完成 PL/SQL 程序. --explicit cursor可以處理回傳多筆與0筆的結果

SQL> declare
  2   cursor emp_cur1 is
  3     select * from hr.emp where department_id=&deptid;
  4   emp_rec emp_cur1%rowtype;
  5   i number := 1;
  6  begin
  7   dbms_output.put_line('Before Open Cursor!');
  8   dbms_output.put_line('---------------------------------');
  9   dbms_output.put_line(emp_rec.employee_id||':'||emp_rec.last_name);
 10   dbms_output.put_line('---------------------------------');
 11   open emp_cur1;
 12   dbms_output.put_line('After Open Cursor!');
 13   dbms_output.put_line('---------------------------------');
 14   loop
 15    fetch emp_cur1 into emp_rec;
 16    dbms_output.put_line('Fecth'||i||'----:'||emp_rec.employee_id||':'||emp_rec.last_name);
 17     emp_rec.employee_id := null;
 18     emp_rec.last_name := null;
 19     i := i+1;
 20     exit when emp_cur1%notfound;
 21   end loop;
 22   close emp_cur1;
 23  end;
 24  /
輸入 deptid 的值:  20
舊的    3:    select * from hr.emp where department_id=&deptid;
新的    3:    select * from hr.emp where department_id=20;
Before Open Cursor!
---------------------------------
:
---------------------------------
After Open Cursor!
---------------------------------
Fecth1----:201:Hartstein
Fecth2----:202:Fay
Fecth3----::

已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor emp_cur1 is
  3     select * from hr.emp where department_id=&deptid;
  4   emp_rec emp_cur1%rowtype;
  5   i number := 1;
  6  begin
  7   dbms_output.put_line('Before Open Cursor!');
  8   dbms_output.put_line('---------------------------------');
  9   dbms_output.put_line(emp_rec.employee_id||':'||emp_rec.last_name);
 10   dbms_output.put_line('---------------------------------');
 11   open emp_cur1;
 12   dbms_output.put_line('After Open Cursor!');
 13   dbms_output.put_line('---------------------------------');
 14   loop
 15    fetch emp_cur1 into emp_rec;
 16    exit when emp_cur1%notfound;
 17    dbms_output.put_line('Fecth'||i||'----:'||emp_rec.employee_id||':'||emp_rec.last_na
me);
 18     emp_rec.employee_id := null;
 19     emp_rec.last_name := null;
 20     i := i+1;
 21   end loop;
 22   close emp_cur1;
 23  end;
 24  /
輸入 deptid 的值:  20
舊的    3:    select * from hr.emp where department_id=&deptid;
新的    3:    select * from hr.emp where department_id=20;
Before Open Cursor!
---------------------------------
:
---------------------------------
After Open Cursor!
---------------------------------
Fecth1----:201:Hartstein
Fecth2----:202:Fay

已順利完成 PL/SQL 程序.

SQL> /
輸入 deptid 的值:  90
舊的    3:    select * from hr.emp where department_id=&deptid;
新的    3:    select * from hr.emp where department_id=90;
Before Open Cursor!
---------------------------------
:
---------------------------------
After Open Cursor!
---------------------------------
Fecth1----:100:King
Fecth2----:101:Kochhar
Fecth3----:102:De Haan

已順利完成 PL/SQL 程序.

SQL> select * from hr.emp where department_id=900;

沒有任何資料列被選取

SQL> select count(*) from hr.emp where department_id=80;

  COUNT(*)
----------
        34

--使用FOR LOOP CURSOR內容
SQL> declare
  2   CURSOR dept80_cur IS
  3    select * from hr.emp where department_id=80;
  4　i number := 1;
  5  begin
  6   FOR dept80_rec IN dept80_cur LOOP   --dept80_rec不需要事先宣告
  7    dbms_output.put_line(i||':'||dept80_rec.last_name||':'||dept80_rec.salary);  --不需要人為open/fetch/close cursor
    -- dbms_output.put_line(dept80_cur%rowcount||':'||dept80_rec.last_name||':'||dept80_rec.salary); --使用rowcount取代i
  8    i := i+1;
  9   END LOOP;
 10  end;
 11  /
1:Russell:14000
2:Partners:13500
3:Errazuriz:12000
4:Cambrault:11000
5:Zlotkey:10500
6:Tucker:10000
7:Bernstein:9500
8:Hall:9000
9:Olsen:8000
10:Cambrault:7500
11:Tuvault:7000
12:King:10000
13:Sully:9500
14:McEwen:9000
15:Smith:8000
16:Doran:7500
17:Sewall:7000
18:Vishney:10500
19:Greene:9500
20:Marvins:7200
21:Lee:6800
22:Ande:6400
23:Banda:6200
24:Ozer:11500
25:Bloom:10000
26:Fox:9600
27:Smith:7400
28:Bates:7300
29:Kumar:6100
30:Abel:11000
31:Hutton:8800
32:Taylor:8600
33:Livingston:8400
34:Johnson:6200

已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor emp_cur1 is
  3     select * from hr.emp where department_id=&deptid;
  4   i pls_integer := 1;
  5  begin
  6   dbms_output.put_line('---------------------------------');
  7   for emp_rec in emp_cur1 loop
  8    dbms_output.put_line('Fecth'||i||'----:'||emp_rec.employee_id||':'||emp_rec.last_name);
  9    emp_rec.employee_id := null;
 10    emp_rec.last_name := null;
 11    i := i + 1;
 12   end loop;
 13  end;
 14  /
輸入 deptid 的值:  20
舊的    3:    select * from hr.emp where department_id=&deptid;
新的    3:    select * from hr.emp where department_id=20;
---------------------------------
Fecth1----:201:Hartstein
Fecth2----:202:Fay

已順利完成 PL/SQL 程序.

--連CURSOR定義也不事先宣告
SQL> BEGIN
  2   FOR dept50_rec IN (select * from hr.emp where department_id=50) LOOP
  3    dbms_output.put_line(dept50_rec.last_name||':'||dept50_rec.salary);
  4   END LOOP;
  5  end;
  6  /
OConnell:2600
Grant:2600
Weiss:8000
Fripp:8200
Kaufling:7900
Vollman:6500
Mourgos:5800
Nayer:3200
Mikkilineni:2700
Landry:2400
Markle:2200
Bissot:3300
Atkinson:2800
Marlow:2500
Olson:2100
Mallin:3300
Rogers:2900
Gee:2400
Philtanker:2200
Ladwig:3600
Stiles:3200
Seo:2700
Patel:2500
Rajs:3500
Davies:3100
Matos:2600
Vargas:2500
Taylor:3200
Fleaur:3100
Sullivan:2500
Geoni:2800
Sarchand:4200
Bull:4100
Dellinger:3400
Cabrio:3000
Chung:3800
Dilly:3600
Gates:2900
Perkins:2500
Bell:4000
Everett:3900
McCain:3200
Jones:2800
Walsh:3100
Feeney:3000

已順利完成 PL/SQL 程序.

--最多讀取10筆active set的資料
SQL> declare
  2   counter integer := 0;
  3  begin
  4   for dept50_rec in (select * from hr.emp where department_id=50) loop
  5    dbms_output.put_line(dept50_rec.last_name||':'||dept50_rec.salary);
  6    counter := counter+1;
  7    EXIT WHEN counter=10;
  8   end loop;
  9  end;
 10  /
OConnell:2600
Grant:2600
Weiss:8000
Fripp:8200
Kaufling:7900
Vollman:6500
Mourgos:5800
Nayer:3200
Mikkilineni:2700
Landry:2400

已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor cur1 is select salary,last_name from hr.emp where department_id=80;
  3   type emp_type is table of cur1%rowtype index by pls_integer;
  4   emp_tab emp_type;
  5   i number := 1;
  6  begin
  7   for emp_rec in cur1 loop
  8    emp_tab(i) := emp_rec;
  9    i := i + 1;
 10   end loop;
 11   for j in emp_tab.first..emp_tab.last loop
 12    dbms_output.put_line(j||':'||emp_tab(j).last_name||':'||emp_tab(j).salary);
 13   end loop;
 14  end;
 15  /
1:Russell:14000
2:Partners:13500
3:Errazuriz:12000
4:Cambrault:11000
5:Zlotkey:10500
6:Tucker:10000
7:Bernstein:9500
8:Hall:9000
9:Olsen:8000
10:Cambrault:7500
11:Tuvault:7000
12:King:10000
13:Sully:9500
14:McEwen:9000
15:Smith:8000
16:Doran:7500
17:Sewall:7000
18:Vishney:10500
19:Greene:9500
20:Marvins:7200
21:Lee:6800
22:Ande:6400
23:Banda:6200
24:Ozer:11500
25:Bloom:10000
26:Fox:9600
27:Smith:7400
28:Bates:7300
29:Kumar:6100
30:Abel:11000
31:Hutton:8800
32:Taylor:8600
33:Livingston:8400
34:Johnson:6200

已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor cur1 is select salary,last_name from hr.emp where department_id=80;
  3   type emp_type is table of cur1%rowtype index by pls_integer;
  4   emp_tab emp_type;
  5   i number := 1;
  6  begin
  7   open cur1;
  8   loop
  9    fetch cur1 into emp_tab(i);
 10    exit when cur1%notfound;
 11    i := i + 1;
 12   end loop;
 13   close cur1;
 14   for j in emp_tab.first..emp_tab.last loop
 15    dbms_output.put_line(j||':'||emp_tab(j).last_name||':'||emp_tab(j).salary);
 16   end loop;
 17  end;
 18  /
1:Russell:14000
2:Partners:13500
3:Errazuriz:12000
4:Cambrault:11000
5:Zlotkey:10500
6:Tucker:10000
7:Bernstein:9500
8:Hall:9000
9:Olsen:8000
10:Cambrault:7500
11:Tuvault:7000
12:King:10000
13:Sully:9500
14:McEwen:9000
15:Smith:8000
16:Doran:7500
17:Sewall:7000
18:Vishney:10500
19:Greene:9500
20:Marvins:7200
21:Lee:6800
22:Ande:6400
23:Banda:6200
24:Ozer:11500
25:Bloom:10000
26:Fox:9600
27:Smith:7400
28:Bates:7300
29:Kumar:6100
30:Abel:11000
31:Hutton:8800
32:Taylor:8600
33:Livingston:8400
34:Johnson:6200

已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor cur1 is select salary,last_name from hr.emp where department_id=80;
  3   type emp_type is table of cur1%rowtype index by pls_integer;
  4   emp_tab emp_type;
  5  begin
  6   open cur1;
  7   fetch cur1 bulk collect into emp_tab;
  8   close cur1;
  9   for j in emp_tab.first..emp_tab.last loop
 10    dbms_output.put_line(j||':'||emp_tab(j).last_name||':'||emp_tab(j).salary);
 11   end loop;
 12  end;
 13  /
1:Russell:14000
2:Partners:13500
3:Errazuriz:12000
4:Cambrault:11000
5:Zlotkey:10500
6:Tucker:10000
7:Bernstein:9500
8:Hall:9000
9:Olsen:8000
10:Cambrault:7500
11:Tuvault:7000
12:King:10000
13:Sully:9500
14:McEwen:9000
15:Smith:8000
16:Doran:7500
17:Sewall:7000
18:Vishney:10500
19:Greene:9500
20:Marvins:7200
21:Lee:6800
22:Ande:6400
23:Banda:6200
24:Ozer:11500
25:Bloom:10000
26:Fox:9600
27:Smith:7400
28:Bates:7300
29:Kumar:6100
30:Abel:11000
31:Hutton:8800
32:Taylor:8600
33:Livingston:8400
34:Johnson:6200

已順利完成 PL/SQL 程序.

SQL> declare
  2   type emp_rec_type is record (salary hr.emp.salary%type,last_name hr.emp.last_name%type);
  3   type emp_type is table of emp_rec_type index by pls_integer;
  4   emp_tab emp_type;
  5  begin
  6   select salary,last_name bulk collect into emp_tab from hr.emp where department_id=80;
  7   for j in emp_tab.first..emp_tab.last loop
  8    dbms_output.put_line(j||':'||emp_tab(j).last_name||':'||emp_tab(j).salary);
  9   end loop;
 10  end;
 11  /
1:Russell:14000
2:Partners:13500
3:Errazuriz:12000
4:Cambrault:11000
5:Zlotkey:10500
6:Tucker:10000
7:Bernstein:9500
8:Hall:9000
9:Olsen:8000
10:Cambrault:7500
11:Tuvault:7000
12:King:10000
13:Sully:9500
14:McEwen:9000
15:Smith:8000
16:Doran:7500
17:Sewall:7000
18:Vishney:10500
19:Greene:9500
20:Marvins:7200
21:Lee:6800
22:Ande:6400
23:Banda:6200
24:Ozer:11500
25:Bloom:10000
26:Fox:9600
27:Smith:7400
28:Bates:7300
29:Kumar:6100
30:Abel:11000
31:Hutton:8800
32:Taylor:8600
33:Livingston:8400
34:Johnson:6200

已順利完成 PL/SQL 程序.

SQL> declare
  2   counter integer := 0;
  3  begin
  4   for dept50_rec in (select * from hr.emp where department_id=50 order by salary desc) loop
  5    counter := counter+1;
  6    dbms_output.put_line(counter||':'||dept50_rec.last_name||':'||dept50_rec.salary);
  7    exit when counter=10;
  8   end loop;
  9  end;
 10  /
1:Fripp:8200
2:Weiss:8000
3:Kaufling:7900
4:Vollman:6500
5:Mourgos:5800
6:Sarchand:4200
7:Bull:4100
8:Bell:4000
9:Everett:3900
10:Chung:3800

已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor dept_cur(p_deptid number) is
  3    select * from hr.emp where department_id=p_deptid;                 --p_deptid形式參數(formal parameter)
  4   emp_rec dept_cur%rowtype;
  5  begin
  6   open dept_cur(10);  --等同select * from hr.emp where department_id=10  --10實際參數(actual parameter)
  7    dbms_output.put_line('Department_id:10');
  8   loop
  9    fetch dept_cur into emp_rec;
 10    exit when dept_cur%notfound;
 11    dbms_output.put_line(emp_rec.last_name);
 12   end loop;
 13   close dept_cur;
 14   open dept_cur(20);  --等同select * from hr.emp where department_id=20
 15    dbms_output.put_line('Department_id:20');
 16   loop
 17    fetch dept_cur into emp_rec;
 18    exit when dept_cur%notfound;
 19    dbms_output.put_line(emp_rec.last_name);
 20   end loop;
 21   close dept_cur;
 22  end;
 23  /
Department_id:10
Whalen
Department_id:20
Hartstein
Fay

已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor dept_cur(p_deptid number,p_salary number) is
  3    select * from hr.emp where department_id=p_deptid and salary<=p_salary;
  4   emp_rec dept_cur%rowtype;
  5  begin
  6   open dept_cur(10,10000);  --等同select * from hr.emp where department_id=10 and salary<=10000
  7    dbms_output.put_line('Department_id:10:10000');
  8    loop
  9     fetch dept_cur into emp_rec;
 10     exit when dept_cur%notfound;
 11     dbms_output.put_line(emp_rec.last_name);
 12    end loop;
 13    close dept_cur;
 14    open dept_cur(20,5000);  --等同select * from hr.emp where department_id=20 and salary<=5000
 15    dbms_output.put_line('Department_id:20:5000');
 16    loop
 17     fetch dept_cur into emp_rec;
 18     exit when dept_cur%notfound;
 19     dbms_output.put_line(emp_rec.last_name);
 20    end loop;
 21    close dept_cur;
 22  end;
 23  /
Department_id:10:10000
Whalen
Department_id:20:5000

已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor emp_cur1(p_deptid number) is
  3     select * from hr.emp where department_id=p_deptid;
  4   i pls_integer := 1;
  5  begin
  6   dbms_output.put_line('---------------------------------');
  7   for emp_rec in emp_cur1(&deptid) loop
  8    dbms_output.put_line('Fecth'||i||'----:'||emp_rec.employee_id||':'||emp_rec.last_name);
  9    emp_rec.employee_id := null;
 10    emp_rec.last_name := null;
 11    i := i + 1;
 12   end loop;
 13  end;
 14  /
輸入 deptid 的值:  20
舊的    7:  for emp_rec in emp_cur1(&deptid) loop
新的    7:  for emp_rec in emp_cur1(20) loop
---------------------------------
Fecth1----:201:Hartstein
Fecth2----:202:Fay

已順利完成 PL/SQL 程序.

SQL> /
輸入 deptid 的值:  30
舊的    7:  for emp_rec in emp_cur1(&deptid) loop
新的    7:  for emp_rec in emp_cur1(30) loop
---------------------------------
Fecth1----:114:Raphaely
Fecth2----:115:Khoo
Fecth3----:116:Baida
Fecth4----:117:Tobias
Fecth5----:118:Himuro
Fecth6----:119:Colmenares

已順利完成 PL/SQL 程序.


SQL> select salary from hr.emp where employee_id=100;

    SALARY
----------
     24000   --因為oracle server採用read committed機制,所以只能確認目前employee_id=100這筆row的salary最後一個有效版本為24000.
	         --至於此筆row是否正在被修改,select指令完全無法得知.因為select不會取得任何型態的lock.
	 
SQL> select salary from hr.emp where employee_id=100 for update;

    SALARY
----------
     24000  --因為使用FOR UPDATE語法,所以當回傳24000時,表示這筆row已經被此session鎖定,其他session不能修改此row,除非此session釋放此lock.
	 
SQL>  declare
  2    cursor emp_dept_20_cur is
  3     select * from hr.emp where department_id=20;
  4    emp_dept_20_rec emp_dept_20_cur%rowtype;
  5   begin
  6    open emp_dept_20_cur;
  7    loop
  8     fetch emp_dept_20_cur into emp_dept_20_rec;
  9     exit when emp_dept_20_cur%notfound;
 10     if emp_dept_20_rec.salary<5000
 11      then
 12       dbms_output.put_line('Before Update : '||emp_dept_20_rec.salary);
 13       update hr.emp set salary=salary*1.5 where employee_id=emp_dept_20_rec.employee_id;    --必須使用where條件確認所要修改的row為何
 14       dbms_output.put_line('After Update : '||emp_dept_20_rec.salary*1.5);
 15     end if;
 16    end loop;
 17    close emp_dept_20_cur;
 18   end;
 19   /

已順利完成 PL/SQL 程序.

SQL>  declare
  2    cursor emp_dept_50_cur is
  3     select * from hr.emp where department_id=50;
  4    emp_dept_50_rec emp_dept_50_cur%rowtype;
  5   begin
  6    open emp_dept_50_cur;
  7    loop
  8     fetch emp_dept_50_cur into emp_dept_50_rec;
  9     exit when emp_dept_50_cur%notfound;
 10     if emp_dept_50_rec.salary<5000
 11      then
 12       dbms_output.put_line('Before Update : '||emp_dept_50_rec.salary);
 13       update hr.emp set salary=salary*1.5 where employee_id=emp_dept_50_rec.employee_id;
 14       dbms_output.put_line('After Update : '||emp_dept_50_rec.salary*1.5);
 15     end if;
 16    end loop;
 17    close emp_dept_50_cur;
 18   end;
 19  /
Before Update : 2600
After Update : 3900
Before Update : 2600
After Update : 3900
Before Update : 3200
After Update : 4800
Before Update : 2700
After Update : 4050
Before Update : 2400
After Update : 3600
Before Update : 2200
After Update : 3300
Before Update : 3300
After Update : 4950
Before Update : 2800
After Update : 4200
Before Update : 2500
After Update : 3750
Before Update : 2100
After Update : 3150
Before Update : 3300
After Update : 4950
Before Update : 2900
After Update : 4350
Before Update : 2400
After Update : 3600
Before Update : 2200
After Update : 3300
Before Update : 3600
After Update : 5400
Before Update : 3200
After Update : 4800
Before Update : 2700
After Update : 4050
Before Update : 2500
After Update : 3750
Before Update : 3500
After Update : 5250
Before Update : 3100
After Update : 4650
Before Update : 2600
After Update : 3900
Before Update : 2500
After Update : 3750
Before Update : 3200
After Update : 4800
Before Update : 3100
After Update : 4650
Before Update : 2500
After Update : 3750
Before Update : 2800
After Update : 4200
Before Update : 4200
After Update : 6300
Before Update : 4100
After Update : 6150
Before Update : 3400
After Update : 5100
Before Update : 3000
After Update : 4500
Before Update : 3800
After Update : 5700
Before Update : 3600
After Update : 5400
Before Update : 2900
After Update : 4350
Before Update : 2500
After Update : 3750
Before Update : 4000
After Update : 6000
Before Update : 3900
After Update : 5850
Before Update : 3200
After Update : 4800
Before Update : 2800
After Update : 4200
Before Update : 3100
After Update : 4650
Before Update : 3000
After Update : 4500

已順利完成 PL/SQL 程序.


SQL> rollback;

倒回完成.

SQL> declare
  2   cursor emp_dept_50_cur is
  3    select * from hr.emp where department_id=50 FOR UPDATE;  --for update將取得這個select所對應rows的lock
  4   emp_dept_50_rec emp_dept_50_cur%rowtype;
  5  begin
  6   open emp_dept_50_cur;  --除執行cursor SQL產生active set外,還取得這些rows的row level lock(exclusive mode)
  7   loop
  8    fetch emp_dept_50_cur into emp_dept_50_rec;
  9    exit when emp_dept_50_cur%notfound;
 10    if emp_dept_50_rec.salary<5000
 11     then
 12      dbms_output.put_line('Before Update : '||emp_dept_50_rec.salary);
 13      update hr.emp set salary=salary*1.5 WHERE CURRENT OF emp_dept_50_cur;  --之前fetch成功的row,便是目前被異動的row
 14      dbms_output.put_line('After Update : '||emp_dept_50_rec.salary*1.5);
 15    end if;
 16   end loop;
 17   close emp_dept_50_cur;
 18  end;
 19  /
Before Update : 2600
After Update : 3900
Before Update : 2600
After Update : 3900
Before Update : 3200
After Update : 4800
Before Update : 2700
After Update : 4050
Before Update : 2400
After Update : 3600
Before Update : 2200
After Update : 3300
Before Update : 3300
After Update : 4950
Before Update : 2800
After Update : 4200
Before Update : 2500
After Update : 3750
Before Update : 2100
After Update : 3150
Before Update : 3300
After Update : 4950
Before Update : 2900
After Update : 4350
Before Update : 2400
After Update : 3600
Before Update : 2200
After Update : 3300
Before Update : 3600
After Update : 5400
Before Update : 3200
After Update : 4800
Before Update : 2700
After Update : 4050
Before Update : 2500
After Update : 3750
Before Update : 3500
After Update : 5250
Before Update : 3100
After Update : 4650
Before Update : 2600
After Update : 3900
Before Update : 2500
After Update : 3750
Before Update : 3200
After Update : 4800
Before Update : 3100
After Update : 4650
Before Update : 2500
After Update : 3750
Before Update : 2800
After Update : 4200
Before Update : 4200
After Update : 6300
Before Update : 4100
After Update : 6150
Before Update : 3400
After Update : 5100
Before Update : 3000
After Update : 4500
Before Update : 3800
After Update : 5700
Before Update : 3600
After Update : 5400
Before Update : 2900
After Update : 4350
Before Update : 2500
After Update : 3750
Before Update : 4000
After Update : 6000
Before Update : 3900
After Update : 5850
Before Update : 3200
After Update : 4800
Before Update : 2800
After Update : 4200
Before Update : 3100
After Update : 4650
Before Update : 3000
After Update : 4500

已順利完成 PL/SQL 程序.


SQL> rollback;  --請注意,需要明確的commit/rollback來結束進行中交易與釋放相關locks

倒回完成.

SQL> select salary from hr.emp where employee_id=100;

    SALARY
----------
     24000

SQL> create table hr.emp2 as select * from hr.employees;

SQL> declare
  2   cursor emp2_cur is select * from hr.emp2 where department_id=90 for update;
  3   emp2_rec emp2_cur%rowtype;
  4   i number;
  5   v_empcount number;
  6  begin
  7   open emp2_cur;
  8   i := 1;
  9   select count(*) into v_empcount from hr.emp2;
 10   dbms_output.put_line('Before Delete :'||v_empcount);
 11   loop
 12    fetch emp2_cur into emp2_rec;
 13  --  delete hr.emp2 where current of emp2_cur;
 14    exit when i>=4;
 15    delete hr.emp2 where current of emp2_cur;
 16    i := i+1;
 17   end loop;
 18   close emp2_cur;
 19   select count(*) into v_empcount from hr.emp2;
 20   dbms_output.put_line('After Delete :'||v_empcount);
 21  rollback;
 22  end;
 23  /
Before Delete :107
After Delete :104

已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor emp2_cur is select * from hr.emp2 where department_id=90 for update;
  3   emp2_rec emp2_cur%rowtype;
  4   i number;
  5   v_empcount number;
  6  begin
  7   open emp2_cur;
  8   i := 1;
  9   select count(*) into v_empcount from hr.emp2;
 10   dbms_output.put_line('Before Delete :'||v_empcount);
 11   loop
 12    fetch emp2_cur into emp2_rec;
 13    delete hr.emp2 where current of emp2_cur;
 14    exit when i>=4;
 15  --  delete hr.emp2 where current of emp2_cur;
 16    i := i+1;
 17   end loop;
 18   close emp2_cur;
 19   select count(*) into v_empcount from hr.emp2;
 20   dbms_output.put_line('After Delete :'||v_empcount);
 21   rollback;
 22  end;
 23  /
Before Delete :107
declare
*
 ERROR 在行 1:
ORA-01410: ROWID 無效
ORA-06512: 在 line 13
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
C:\>sqlplus system/oracle

SQL> select salary from hr.emp where employee_id=100;

    SALARY
----------
     24000

SQL> update hr.emp set salary=40000 where employee_id=100;

已更新 1 個資料列.

SQL> select salary from hr.emp where employee_id=100;

    SALARY
----------
     40000

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

SQL> select salary from hr.emp where employee_id=100;

    SALARY
----------
     24000

SQL>
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

SQL> commit;

確認完成.

SQL> select salary from hr.emp where employee_id=100;

    SALARY
----------
     40000

SQL>
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
SQL> update hr.emp set salary=30000 where employee_id=100;

已更新 1 個資料列.

SQL> commit;

確認完成.

SQL> select salary from hr.emp where employee_id=100;

    SALARY
----------
     30000

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
SQL> show user
USER 為 "SYSTEM"
SQL> update hr.emp set salary=45000 where employee_id=100;

已更新 1 個資料列.

SQL> select salary from hr.emp where employee_id=100;

    SALARY
----------
     45000

SQL>
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

SQL> select salary from hr.emp where employee_id=100;

    SALARY
----------
     30000

SQL> select salary from hr.emp where employee_id=100 for update;
Waiting Lock

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
SQL> commit;

確認完成.

SQL>
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
SQL> select salary from hr.emp where employee_id=100 for update;

    SALARY
----------
     45000


SQL>  commit;

確認完成.
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
SQL> declare
  2   cursor emp_cur_90 is select * from hr.emp where department_id=90 for update;
  3   v_new_salary number;
  4   v_old_salary number;
  5   v_real_update number;
  5  begin
  6   for emp_90 in emp_cur_90 loop
  7    v_old_salary := emp_90.salary;
  8    v_new_salary := emp_90.salary*1.2;
  9    update hr.emp set salary=v_new_salary where current of emp_cur_90;
 10    dbms_output.put_line('Before : '||v_old_salary);
 11    select salary into v_real_update from hr.emp where employee_id=emp_90.employee_id;
 12    dbms_output.put_line('After : '||v_real_update);
 13   end loop;
 14   rollback;
 15  end;
 16  /
Before : 24000
After : 28800
Before : 17000
After : 20400
Before : 17000
After : 20400

已順利完成 PL/SQL 程序.

SQL> declare
  2   cursor emp_cur_90 is select * from hr.emp where department_id=90 for update;
  3   v_new_salary number;
  4   v_old_salary number;
  5   v_real_update number;
  6  begin
  7   for emp_90 in emp_cur_90 loop
  8    v_old_salary := emp_90.salary;
  9    v_new_salary := emp_90.salary*1.2;
 10    update hr.emp set salary=v_new_salary where employee_id=emp_90.employee_id
 11     returning salary into v_real_update;
 12    dbms_output.put_line('Before : '||v_old_salary);
 13  --  select salary into v_real_update from hr.emp where employee_id=emp_90.employee_id;
 14    dbms_output.put_line('After : '||v_real_update);
 15   end loop;
 16   rollback;
 17  end;
 18 /
Before : 24000
After : 28800
Before : 17000
After : 20400
Before : 17000
After : 20400

已順利完成 PL/SQL 程序.

SQL> DECLARE
  2   TYPE emp_type IS RECORD
  3    (last_name employees.last_name%TYPE,salary employees.salary%TYPE,job_id employees.job_id%TYPE);
  4   TYPE emp_tab_type IS TABLE OF emp_type INDEX BY pls_integer;
  5   tab_emp emp_tab_type;
  6   rec_emp emp_type;
  7   CURSOR cur_emp IS
  8    SELECT last_name,salary,job_id FROM employees WHERE employee_id BETWEEN 100 AND 110;
  9   i INT := 1;
 10  BEGIN
 11   OPEN cur_emp;
 12   LOOP
 13    FETCH cur_emp INTO rec_emp;
 14    EXIT WHEN cur_emp%NOTFOUND;
 15    tab_emp(i) := rec_emp;
 16    i := i + 1;
 17   END LOOP;
 18   dbms_output.put_line(tab_emp.COUNT);
 19   FOR i IN tab_emp.FIRST .. tab_emp.LAST LOOP
 20    dbms_output.put_line(tab_emp(i).last_name||':'||tab_emp(i).salary||':'||tab_emp(i).job_id);
 21   END LOOP;
 22  END;
 23  /
11
King:24000:AD_PRES
Kochhar:17000:AD_VP
De Haan:17000:AD_VP
Hunold:9000:IT_PROG
Ernst:6000:IT_PROG
Austin:4800:IT_PROG
Pataballa:4800:IT_PROG
Lorentz:4200:IT_PROG
Greenberg:12008:FI_MGR
Faviet:9000:FI_ACCOUNT
Chen:8200:FI_ACCOUNT

已順利完成 PL/SQL 程序.

SQL> DECLARE
  2   TYPE emp_type IS RECORD
  3    (last_name employees.last_name%TYPE,salary employees.salary%TYPE,job_id employees.job_id%TYPE);
  4   TYPE emp_tab_type IS TABLE OF emp_type INDEX BY pls_integer;
  5   tab_emp emp_tab_type;
  6   rec_emp emp_type;
  7   CURSOR cur_emp IS
  8    SELECT last_name,salary,job_id FROM employees WHERE employee_id BETWEEN 100 AND 110;
  9   i INT := 1;
 10  BEGIN
 11   OPEN cur_emp;
 12   FETCH cur_emp BULK COLLECT INTO tab_emp;
 13   dbms_output.put_line(tab_emp.COUNT);
 14   FOR i IN tab_emp.FIRST .. tab_emp.LAST LOOP
 15    dbms_output.put_line(tab_emp(i).last_name||':'||tab_emp(i).salary||':'||tab_emp(i).job_id);
 16   END LOOP;
 17  END;
 18  /
11
King:24000:AD_PRES
Kochhar:17000:AD_VP
De Haan:17000:AD_VP
Hunold:9000:IT_PROG
Ernst:6000:IT_PROG
Austin:4800:IT_PROG
Pataballa:4800:IT_PROG
Lorentz:4200:IT_PROG
Greenberg:12008:FI_MGR
Faviet:9000:FI_ACCOUNT
Chen:8200:FI_ACCOUNT

已順利完成 PL/SQL 程序.